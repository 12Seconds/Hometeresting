# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := action_after_build
### Rules for action "move_lib":
quiet_cmd_action_after_build_move_lib = ACTION action_after_build_move_lib $@
cmd_action_after_build_move_lib = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd $(srcdir)/.; cp "$(builddir)/uws.node" uws_linux_11.node

uws: obj := $(abs_obj)

uws: builddir := $(abs_builddir)

uws: TOOLSET := $(TOOLSET)
uws: $(builddir)/uws.node FORCE_DO_CMD
	$(call do_cmd,action_after_build_move_lib)

all_deps += uws
action_action_after_build_move_lib_outputs := uws


### Rules for final target.
# Build our special outputs first.
$(obj).target/action_after_build.stamp: | $(action_action_after_build_move_lib_outputs)

# Preserve order dependency of special output on deps.
$(action_action_after_build_move_lib_outputs): | $(builddir)/uws.node

$(obj).target/action_after_build.stamp: TOOLSET := $(TOOLSET)
$(obj).target/action_after_build.stamp: $(builddir)/uws.node FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/action_after_build.stamp
# Add target alias
.PHONY: action_after_build
action_after_build: $(obj).target/action_after_build.stamp

# Add target alias to "all" target.
.PHONY: all
all: action_after_build

